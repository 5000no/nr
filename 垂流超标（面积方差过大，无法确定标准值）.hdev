<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="24.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>* 设置文件夹路径</c>
<l>FolderPath := 'H:/NR数据集/采图（cdd1-cdd6）已筛选/cdd2筛选/合格品' </l>
<c></c>
<c>* 获取文件夹中的所有图像文件</c>
<l>list_files(FolderPath, ['files'], Files)</l>
<l>tuple_length(Files, Length)</l>
<c></c>
<c>* 遍历每一张图像</c>
<l>for I := 0 to Length - 1 by 1</l>
<c></c>
<c>    * 获取当前图像路径</c>
<l>    tuple_select(Files, I, ImagePath)   </l>
<c></c>
<c>    * 读取图像</c>
<l>    read_image(Image, ImagePath)</l>
<c>    * 获取图像尺寸</c>
<l>    get_image_size(Image, Width, Height)</l>
<c></c>
<c>    * 转换为灰度图像</c>
<l>    rgb1_to_gray(Image, GrayImage)</l>
<l>    decompose3(Image, R, G, B)</l>
<l>    gauss_filter(G, ImageGauss, 3)</l>
<l>    threshold(ImageGauss, RegionThreshold, 0, 100)</l>
<c></c>
<c>    * 填充区域（如果需要）</c>
<l>    fill_up(RegionThreshold, RegionFillUp)</l>
<c></c>
<c>    * 提取所有连通域</c>
<l>    connection(RegionFillUp, ConnectedRegions)</l>
<c></c>
<c>    * 通过重心行坐标筛选“下方区域”（Row值大的）</c>
<l>    select_shape(ConnectedRegions, ROIRegion, 'row', 'and', Height/2, Height)</l>
<c></c>
<c>     * 获取面积列表</c>
<l>    area_center(ROIRegion, Areas, Rows, Cols)</l>
<l>   select_shape(ROIRegion, LargeRegions, 'area', 'and', 100000, 9999999999)</l>
<l>   area_center(LargeRegions, Areas, Rows, Cols)</l>
<c>    * 面积标准值</c>
<l>    StandardArea := 160000</l>
<c></c>
<c>    * 判断区域个数（如果有多个只取第一个面积）</c>
<l>    if (|Areas| &gt; 0)</l>
<l>        Area := Areas[0]</l>
<l>    else</l>
<l>        Area := 0</l>
<l>    endif</l>
<c>     * 计算面积差</c>
<l>    AreaDiff := abs(Area - StandardArea)</l>
<c></c>
<c>    * 判断OK/NG</c>
<l>    if (AreaDiff &gt; 20000)</l>
<l>        Result := 1 </l>
<c>        * 有缺陷</c>
<l>    else</l>
<l>        Result := 0  </l>
<c>        * 无缺陷</c>
<l>    endif</l>
<c></c>
<l>    stop()</l>
<c></c>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
